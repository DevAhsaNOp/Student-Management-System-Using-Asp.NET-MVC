@model Student_Management_System.Context.@class

@{
    ViewBag.Title = "Edit Class";
}

<h2>Add Class</h2>

@using (Html.BeginForm("AddClass", "Class", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.id)
            <label>Class Name: </label>
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            <label>Section: </label>
            @Html.ValidationMessageFor(model => model.section, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.section, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            <label>Maths: </label>
            @Html.ValidationMessageFor(model => model.IsMaths, "", new { @class = "text-danger" })
            @if (Model.IsMaths.Value == true)
            {
                @Html.DropDownListFor(m => m.IsMaths,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsMaths,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsMaths, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>English Literature: </label>
            @Html.ValidationMessageFor(model => model.IsEnglishLiterature, "", new { @class = "text-danger" })
            @if (Model.IsEnglishLiterature.Value == true)
            {
                @Html.DropDownListFor(m => m.IsEnglishLiterature,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsEnglishLiterature,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsEnglishLiterature, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>English Grammar: </label>
            @Html.ValidationMessageFor(model => model.IsEnglishGrammar, "", new { @class = "text-danger" })
            @if (Model.IsEnglishGrammar.Value == true)
            {
                @Html.DropDownListFor(m => m.IsEnglishGrammar,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsEnglishGrammar,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsEnglishGrammar, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Urdu: </label>
            @Html.ValidationMessageFor(model => model.IsUrdu, "", new { @class = "text-danger" })
            @if (Model.IsUrdu.Value == true)
            {
                @Html.DropDownListFor(m => m.IsUrdu,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsUrdu,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsUrdu, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Islamiyat: </label>
            @Html.ValidationMessageFor(model => model.IsIslamiyat, "", new { @class = "text-danger" })
            @if (Model.IsIslamiyat.Value == true)
            {
                @Html.DropDownListFor(m => m.IsIslamiyat,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsIslamiyat,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsIslamiyat, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Science: </label>
            @Html.ValidationMessageFor(model => model.IsScience, "", new { @class = "text-danger" })
            @if (Model.IsScience.Value == true)
            {
                @Html.DropDownListFor(m => m.IsScience,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsScience,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsScience, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Physics: </label>
            @Html.ValidationMessageFor(model => model.IsPhysics, "", new { @class = "text-danger" })
            @if (Model.IsPhysics.Value == true)
            {
                @Html.DropDownListFor(m => m.IsPhysics,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsPhysics,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsPhysics, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Chemistry: </label>
            @Html.ValidationMessageFor(model => model.IsChemistry, "", new { @class = "text-danger" })
            @if (Model.IsChemistry.Value == true)
            {
                @Html.DropDownListFor(m => m.IsChemistry,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsChemistry,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsChemistry, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Computer: </label>
            @Html.ValidationMessageFor(model => model.IsComputer, "", new { @class = "text-danger" })
            @if (Model.IsComputer.Value == true)
            {
                @Html.DropDownListFor(m => m.IsComputer,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsComputer,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsComputer, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>History: </label>
            @Html.ValidationMessageFor(model => model.IsHistory, "", new { @class = "text-danger" })
            @if (Model.IsHistory.Value == true)
            {
                @Html.DropDownListFor(m => m.IsHistory,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsHistory,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsHistory, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <label>Geography: </label>
            @Html.ValidationMessageFor(model => model.IsGeography, "", new { @class = "text-danger" })
            @if (Model.IsGeography.Value == true)
            {
                @Html.DropDownListFor(m => m.IsGeography,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true" , Selected = true},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false"}
    },
"Select Option", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(m => m.IsGeography,
    new List<SelectListItem>
    { new SelectListItem { Text = "Yes student can learn this subject", Value = "true"},
        new SelectListItem { Text = "No student can't learn this subject", Value = "false", Selected = true}
    },
"Select Option", new { @class = "form-control" })
            }
            @*@Html.EditorFor(model => model.IsGeography, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>

        <div class="form-group">
            <input type="submit" value="Edit Class" class="btn btn-primary" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}